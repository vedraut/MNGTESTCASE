/*
Deployment script for TestCaseDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TestCaseDB"
:setvar DefaultFilePrefix "TestCaseDB"
:setvar DefaultDataPath "C:\Users\Ved\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Ved\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Procedure [dbo].[CreateUser]...';


GO
create procedure [dbo].[CreateUser] @firstName nvarchar(50)
  , @lastName nvarchar(50)
  , @dateOfBirth datetime
  , @gender nvarchar(10)
  , @email nvarchar(50)
  , @contactNumber nvarchar(20)
as
begin
  insert into t_User (
    FirstName
    , LastName
    , DateOfBirth
    , Gender
    , Email
    , ContactNumber
    )
  values (
    @firstName
    , @lastName
    , @dateOfBirth
    , @gender
    , @email
    , @contactNumber
    );
end
GO
PRINT N'Creating Procedure [dbo].[DeleteUser]...';


GO
create procedure [dbo].[DeleteUser] @userId int
as
begin
  delete from t_User where id = @userId;
end
GO
PRINT N'Creating Procedure [dbo].[GetUserById]...';


GO
create procedure [dbo].[GetUserById] @userId int
as
begin
  --Here we are reffering Id to userId just for sake of testcase we need to maintain UserId seperately.
  select FirstName
    , LastName
    , DateOfBirth
    , Gender
    , Email
    , ContactNumber
  from t_User
  where Id = @userId
end
GO
PRINT N'Creating Procedure [dbo].[UpdateUser]...';


GO
create procedure [dbo].[UpdateUser] @userId int
  , @firstName nvarchar(50) = ''
  , @lastName nvarchar(50) = ''
  , @dateOfBirth datetime = null
  , @gender nvarchar(10) = ''
  , @email nvarchar(50) = ''
  , @contactNumber nvarchar(20) = ''
as
begin
  if exists (
      select id
      from t_User
      where Id = @userId
      )
  begin
    update t_User
    set FirstName = ISNULL(@firstName, FirstName)
      , LastName = ISNULL(@lastName, LastName)
      , DateOfBirth = ISNULL(@dateOfBirth, DateOfBirth)
      , Gender = ISNULL(@gender, Gender)
      , Email = ISNULL(@email, Email)
      , ContactNumber = ISNULL(@contactNumber, ContactNumber)
    where Id = @userId;
  end
end
GO
PRINT N'Update complete.';


GO
